openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://LYT-SaaS-BED-Portfolio.test'
paths:
  /api/v1/companies:
    get:
      summary: 'Display a listing of the resource'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Companies
      security: []
    post:
      summary: 'Store a newly created resource in storage'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Companies
      security: []
  '/api/v1/companies/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Companies
      security: []
    put:
      summary: 'Update Company'
      operationId: updateCompany
      description: 'Update the specified resource in storage.'
      parameters: []
      responses: {  }
      tags:
        - Companies
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Companies
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the company.'
        example: consequatur
        required: true
        schema:
          type: string
  '/api/v1/companies/{id}/restore':
    put:
      summary: 'Restore the specified resource from storage.'
      operationId: restoreTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Companies
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the company.'
        example: quisquam
        required: true
        schema:
          type: string
  /api/v1/companies/restore-all:
    put:
      summary: 'Restore all soft-deleted resources from storage'
      operationId: restoreAllSoftDeletedResourcesFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Companies
      security: []
  '/api/v1/companies/{id}/removeTrash':
    delete:
      summary: 'Permanently delete the specified resource from trash'
      operationId: permanentlyDeleteTheSpecifiedResourceFromTrash
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Companies
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the company.'
        example: autem
        required: true
        schema:
          type: string
  /api/v1/companies/removeTrash-all:
    delete:
      summary: 'Permanently delete all resource from trash'
      operationId: permanentlyDeleteAllResourceFromTrash
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Companies
      security: []
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: txtazkggcclttb
                given_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tffsepzkvkmgyb
                family_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: emshzbweurspjyhki
                user_type:
                  type: string
                  description: ''
                  example: applicant
                  enum:
                    - client
                    - staff
                    - applicant
                status:
                  type: string
                  description: ''
                  example: unknown
                  enum:
                    - active
                    - unconfirmed
                    - suspended
                    - banned
                    - unknown
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: alize63@example.net
                password:
                  type: string
                  description: ''
                  example: aut
              required:
                - nickname
                - given_name
                - family_name
                - user_type
                - status
                - email
                - password
      security: []
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: tierra.hudson@example.com
                password:
                  type: string
                  description: ''
                  example: aut
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: ''
      operationId: postApiLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/positions:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Positions retrieved successfully'
                  data: []
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Positions retrieved successfully'
                  data:
                    type: array
                    example: []
      tags:
        - Positions
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Positions
      security: []
  '/api/positions/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Unauthorized
                  data: null
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unauthorized
                  data:
                    type: string
                    example: null
      tags:
        - Positions
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Positions
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Positions
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the position.'
        example: 2
        required: true
        schema:
          type: integer
  /api/v1/positions:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Positions
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Positions
      security: []
  '/api/v1/positions/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Positions
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Positions
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Positions
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the position.'
        example: 15
        required: true
        schema:
          type: integer
  '/api/v1/positions/{id}/restore':
    put:
      summary: 'Restore the specified resource from storage.'
      operationId: restoreTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Positions
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the position.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/positions/restore-all:
    put:
      summary: 'Restore all soft-deleted resources from storage.'
      operationId: restoreAllSoftDeletedResourcesFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Positions
      security: []
  '/api/v1/positions/{id}/removeTrash':
    delete:
      summary: 'Permanently delete the specified resource from trash.'
      operationId: permanentlyDeleteTheSpecifiedResourceFromTrash
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Positions
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the position.'
        example: 7
        required: true
        schema:
          type: integer
  /api/v1/positions/removeTrash-all:
    delete:
      summary: 'Permanently delete all resources from trash.'
      operationId: permanentlyDeleteAllResourcesFromTrash
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Positions
      security: []
  /api/v1/users:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Users
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
      security: []
  '/api/v1/users/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Users
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: vel
        required: true
        schema:
          type: string
  '/api/v1/users/{id}/restore':
    put:
      summary: 'Restore the specified resource from storage.'
      operationId: restoreTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: sapiente
        required: true
        schema:
          type: string
  /api/v1/users/restore-all:
    put:
      summary: 'Restore all users from storage'
      operationId: restoreAllUsersFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
      security: []
  '/api/v1/users/{id}/removeTrash':
    delete:
      summary: 'Remove the specified user from trash'
      operationId: removeTheSpecifiedUserFromTrash
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: recusandae
        required: true
        schema:
          type: string
  /api/v1/users/removeTrash-all:
    delete:
      summary: 'Remove all users from trash'
      operationId: removeAllUsersFromTrash
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
      security: []
tags:
  -
    name: Companies
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: Positions
    description: .
  -
    name: Users
    description: ''
