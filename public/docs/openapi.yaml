openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://LYT-SaaS-BED-Portfolio.test'
paths:
  /api/v1/companies:
    get:
      summary: 'Display a listing of the resource'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Companies
      security: []
    post:
      summary: 'Store a newly created resource in storage'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Companies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: cwgeqbraoxkhbyjkudlnnq
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: qtaktkophlh
                state:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: e
                country:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: mwmawjeaagqdnibm
                logo:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: smqhpqwuaywdykkh
              required:
                - name
                - city
                - state
                - country
      security: []
  '/api/v1/companies/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Companies
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the company.'
        example: perspiciatis
        required: true
        schema:
          type: string
  '/api/v1/companies/{id}/update':
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Companies
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the company.'
        example: facilis
        required: true
        schema:
          type: string
  '/api/v1/companies/{id}/delete':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Companies
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the company.'
        example: numquam
        required: true
        schema:
          type: string
  /api/v1/companies/delete-all:
    delete:
      summary: 'Permanently delete all resources from storage'
      operationId: permanentlyDeleteAllResourcesFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Companies
      security: []
  '/api/v1/companies/{id}/restore':
    put:
      summary: 'Restore the specified resource from storage.'
      operationId: restoreTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Companies
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the company.'
        example: molestiae
        required: true
        schema:
          type: string
  /api/v1/companies/restore-all:
    put:
      summary: 'Restore all soft-deleted resources from storage'
      operationId: restoreAllSoftDeletedResourcesFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Companies
      security: []
  '/api/v1/companies/{id}/removeTrash':
    put:
      summary: 'Permanently delete the specified resource from trash'
      operationId: permanentlyDeleteTheSpecifiedResourceFromTrash
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Companies
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the company.'
        example: omnis
        required: true
        schema:
          type: string
  /api/v1/companies/removeTrash-all:
    put:
      summary: 'Permanently delete all resource from trash'
      operationId: permanentlyDeleteAllResourceFromTrash
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Companies
      security: []
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: rocoablehniclhygwoqqx
                given_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: biackrlcs
                family_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ilvosqhs
                user_type:
                  type: string
                  description: ''
                  example: applicant
                  enum:
                    - client
                    - staff
                    - applicant
                status:
                  type: string
                  description: ''
                  example: active
                  enum:
                    - active
                    - unconfirmed
                    - suspended
                    - banned
                    - unknown
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: kaitlin72@example.net
                password:
                  type: string
                  description: ''
                  example: repellendus
              required:
                - nickname
                - given_name
                - family_name
                - user_type
                - status
                - email
                - password
      security: []
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: patsy.stark@example.com
                password:
                  type: string
                  description: ''
                  example: repellat
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: ''
      operationId: postApiLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/positions:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Positions retrieved successfully'
                  data:
                    -
                      id: 1
                      advertising_start_date: '2020-10-10'
                      advertising_end_date: '2020-12-12'
                      position_title: asldkm
                      position_description: apsokd
                      position_keywords: asd
                      minimum_salary: 1000
                      maximum_salary: 5000
                      salary_currency: AUD
                      company_id: 1
                      user_id: 1
                      benefits: null
                      requirements: null
                      position_type: contract
                      created_at: '2024-09-19T08:32:24.000000Z'
                      updated_at: '2024-09-19T08:32:24.000000Z'
                      deleted_at: null
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Positions retrieved successfully'
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        advertising_start_date: '2020-10-10'
                        advertising_end_date: '2020-12-12'
                        position_title: asldkm
                        position_description: apsokd
                        position_keywords: asd
                        minimum_salary: 1000
                        maximum_salary: 5000
                        salary_currency: AUD
                        company_id: 1
                        user_id: 1
                        benefits: null
                        requirements: null
                        position_type: contract
                        created_at: '2024-09-19T08:32:24.000000Z'
                        updated_at: '2024-09-19T08:32:24.000000Z'
                        deleted_at: null
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        advertising_start_date:
                          type: string
                          example: '2020-10-10'
                        advertising_end_date:
                          type: string
                          example: '2020-12-12'
                        position_title:
                          type: string
                          example: asldkm
                        position_description:
                          type: string
                          example: apsokd
                        position_keywords:
                          type: string
                          example: asd
                        minimum_salary:
                          type: integer
                          example: 1000
                        maximum_salary:
                          type: integer
                          example: 5000
                        salary_currency:
                          type: string
                          example: AUD
                        company_id:
                          type: integer
                          example: 1
                        user_id:
                          type: integer
                          example: 1
                        benefits:
                          type: string
                          example: null
                        requirements:
                          type: string
                          example: null
                        position_type:
                          type: string
                          example: contract
                        created_at:
                          type: string
                          example: '2024-09-19T08:32:24.000000Z'
                        updated_at:
                          type: string
                          example: '2024-09-19T08:32:24.000000Z'
                        deleted_at:
                          type: string
                          example: null
      tags:
        - Positions
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Positions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                advertising_start_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2024-09-19'
                advertising_end_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2024-09-19'
                position_title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ryckmsbvubzoaqpzqo
                position_description:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: qwmkqftbei
                position_keywords:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: brdalrakvcwl
                minimum_salary:
                  type: number
                  description: 'Must be at least 0.'
                  example: 90
                maximum_salary:
                  type: number
                  description: 'Must be at least 0.'
                  example: 12
                salary_currency:
                  type: string
                  description: 'Must be 3 characters.'
                  example: alp
                benefits:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: zjlav
                requirements:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: u
                position_type:
                  type: string
                  description: ''
                  example: casual
                  enum:
                    - permanent
                    - contract
                    - part-time
                    - casual
                    - internship
              required:
                - advertising_start_date
                - advertising_end_date
                - position_title
                - position_description
                - minimum_salary
                - maximum_salary
                - salary_currency
                - position_type
      security: []
  '/api/positions/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: Unauthorized
                  data: null
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Unauthorized
                  data:
                    type: string
                    example: null
      tags:
        - Positions
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Positions
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Positions
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the position.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/positions:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Positions
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Positions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                advertising_start_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2024-09-19'
                advertising_end_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2024-09-19'
                position_title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: hrjwtpbxldun
                position_description:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: v
                position_keywords:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: dkyzdcknysqmoflhsotrpo
                minimum_salary:
                  type: number
                  description: 'Must be at least 0.'
                  example: 31
                maximum_salary:
                  type: number
                  description: 'Must be at least 0.'
                  example: 30
                salary_currency:
                  type: string
                  description: 'Must be 3 characters.'
                  example: tys
                benefits:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: noyptq
                requirements:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: yvnyvdjllpshnhkl
                position_type:
                  type: string
                  description: ''
                  example: permanent
                  enum:
                    - permanent
                    - contract
                    - part-time
                    - casual
                    - internship
              required:
                - advertising_start_date
                - advertising_end_date
                - position_title
                - position_description
                - minimum_salary
                - maximum_salary
                - salary_currency
                - position_type
      security: []
  '/api/v1/positions/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Positions
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the position.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/positions/{id}/update':
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Positions
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the position.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/positions/{id}/delete':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Positions
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the position.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/positions/delete-all:
    delete:
      summary: 'Permanently delete all resources from storage.'
      operationId: permanentlyDeleteAllResourcesFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Positions
      security: []
  '/api/v1/positions/{id}/restore':
    put:
      summary: 'Restore the specified resource from storage.'
      operationId: restoreTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Positions
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the position.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/positions/restore-all:
    put:
      summary: 'Restore all soft-deleted resources from storage.'
      operationId: restoreAllSoftDeletedResourcesFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Positions
      security: []
  '/api/v1/positions/{id}/removeTrash':
    put:
      summary: 'Permanently delete the specified resource from trash.'
      operationId: permanentlyDeleteTheSpecifiedResourceFromTrash
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Positions
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the position.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/positions/removeTrash-all:
    put:
      summary: 'Permanently delete all resources from trash.'
      operationId: permanentlyDeleteAllResourcesFromTrash
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Positions
      security: []
  /api/v1/users:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Users
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: xgstkpre
                given_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: rxahyiqzrwqljjkd
                family_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: sc
                email:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: gussie.smitham@example.net
                user_type:
                  type: string
                  description: ''
                  example: staff
                  enum:
                    - client
                    - staff
                    - applicant
                status:
                  type: string
                  description: ''
                  example: active
                  enum:
                    - active
                    - unconfirmed
                    - suspended
                    - banned
                    - unknown
                password:
                  type: string
                  description: ''
                  example: deserunt
              required:
                - nickname
                - given_name
                - family_name
                - email
                - user_type
                - status
                - password
      security: []
  '/api/v1/users/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Users
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: beatae
        required: true
        schema:
          type: string
  '/api/v1/users/{id}/update':
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: inventore
        required: true
        schema:
          type: string
  '/api/v1/users/{id}/delete':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: voluptas
        required: true
        schema:
          type: string
  /api/v1/users/delete-all:
    delete:
      summary: 'Remove all users from storage.'
      operationId: removeAllUsersFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
      security: []
  '/api/v1/users/{id}/restore':
    put:
      summary: 'Restore the specified resource from storage.'
      operationId: restoreTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: voluptatem
        required: true
        schema:
          type: string
  /api/v1/users/restore-all:
    put:
      summary: 'Restore all users from storage'
      operationId: restoreAllUsersFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
      security: []
  '/api/v1/users/{id}/removeTrash':
    put:
      summary: 'Remove the specified user from trash'
      operationId: removeTheSpecifiedUserFromTrash
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: molestiae
        required: true
        schema:
          type: string
  /api/v1/users/removeTrash-all:
    put:
      summary: 'Remove all users from trash'
      operationId: removeAllUsersFromTrash
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
      security: []
tags:
  -
    name: Companies
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: Positions
    description: .
  -
    name: Users
    description: ''
